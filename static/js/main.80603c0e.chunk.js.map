{"version":3,"sources":["components/mainpage.js","components/context/auth.js","components/landpage.js","components/register.js","components/secret.js","components/PrivateRoute.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","className","to","Button","style","fontSize","variant","color","AuthContext","createContext","useAuth","useContext","Landing","useState","isLoggedIn","setLoggedIn","isError","setIsError","login","setLogin","password","setPassword","setAuthTokens","undefined","location","state","referer","Validate","autoComplete","onSubmit","axios","post","then","result","status","data","catch","e","TextField","id","value","onChange","target","label","type","name","cursor","fontWeight","textDecoration","emailValidator","passwordValidator","register","firstName","lastName","emailAddress","passwordConfirmation","firstNameError","lastNamerror","emailAddressError","loginError","passwordError","passwordConfirmationError","isFormSubmitted","loginFree","emailAddressFree","handleChange","bind","handleBlur","handleSubmit","validateFirstName","validateLastName","validateLogin","validateEmailAddress","validatePassword","validatePasswordConfirmation","validateField","event","this","setState","preventDefault","isValid","forEach","field","dat","trim","firstNameRight","login_obj","response","console","log","lastNameError","email_obj","test","onBlur","Component","Secret","onClick","PrivateRoute","component","rest","authTokens","render","pathname","Main","Provider","localStorage","setItem","JSON","stringify","exact","path","mainpage","App","fixedHeader","transparent","title","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8SA6BeA,MArBf,SAAcC,GAEZ,OACE,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,mDAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,aAAd,2CACA,qBAAKA,UAAU,eAAf,SACI,mgBAEJ,cAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,YAAjC,SACI,cAACC,EAAA,EAAD,CAAQF,UAAU,SAASG,MAAO,CAACC,SAAU,QAASC,QAAQ,YAAYC,MAAM,YAAhF,mC,kCCjBPC,EAAcC,0BAEpB,SAASC,IACd,OAAOC,qBAAWH,GCoFHI,MAhFjB,SAAiBZ,GAAQ,IAAD,EACca,oBAAS,GADvB,mBACbC,EADa,KACDC,EADC,OAEUF,oBAAS,GAFnB,mBAEbG,EAFa,KAEJC,EAFI,OAGMJ,mBAAS,IAHf,mBAGbK,EAHa,KAGNC,EAHM,OAIYN,mBAAS,IAJrB,mBAIbO,EAJa,KAIHC,EAJG,KAKZC,EAAkBZ,IAAlBY,cAyBR,YAvB4BC,IAAzBvB,EAAMwB,SAASC,MACJzB,EAAMwB,SAASC,MAAMC,QAErB,IAoBVZ,EACK,cAAC,IAAD,CAAUZ,GAAG,YAQtB,qBAAKD,UAAU,iBAAf,SACY,qBAAKA,UAAU,2DAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,mDACA,sBAAKA,UAAU,iBAAf,UACI,uBAAM0B,UAAQ,EAACC,aAAa,MAAMC,SAhC1D,WAGEC,IAAMC,KAAK,iCAAkC,CAC3Cb,QACAE,aACDY,MAAK,SAAAC,GACkB,MAAlBA,EAAOC,QACTZ,EAAcW,EAAOE,MACrBpB,GAAY,IAEZE,GAAW,MAEZmB,OAAM,SAAAC,GACPpB,GAAW,OAkBS,UAEI,cAACqB,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAOtB,EACPuB,SAAU,SAAAJ,GACRlB,EAASkB,EAAEK,OAAOF,QAEpBG,MAAM,WAAWC,KAAK,OAAOC,KAAK,QAClCvC,QAAQ,aAEV,uBAAS,uBACX,cAACgC,EAAA,EAAD,CACIC,GAAG,iBACHI,MAAM,cACNC,KAAK,WACLC,KAAK,WACLJ,SAAU,SAAAJ,GACNhB,EAAYgB,EAAEK,OAAOF,QAEzBlC,QAAQ,aAER,uBAAS,uBACb,cAACH,EAAA,EAAD,CAAQF,UAAU,gBAAgBG,MAAO,CAACC,SAAU,QAAUC,QAAQ,YAAYsC,KAAK,SAASrC,MAAM,YAAtG,qBAAkI,uBAAS,0BAG/I,gDAAkB,cAAC,IAAD,CAAML,GAAG,YAAYE,MAAO,CAACG,MAAO,OAAQuC,OAAQ,UAAWC,WAAY,OAAQC,eAAgB,QAAnG,4BAAlB,4CACEhC,GAAW,6F,gDCpEnCiC,G,OAAiB,0JACjBC,EAAoB,4DAiXXC,E,kDA9WX,aAAe,IAAD,8BACV,gBACK1B,MAAQ,CACX2B,UAAW,GACXC,SAAU,GACVC,aAAc,GACdpC,MAAO,GACPE,SAAU,GACVmC,qBAAsB,GACtBC,eAAgB,GAChBC,aAAc,GACdC,kBAAmB,GACnBC,WAAY,GACZC,cAAe,GACfC,0BAA2B,GAC3BC,iBAAiB,EACjBC,UAAW,GACXC,iBAAkB,IAGpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,gBACzB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,qBAAuB,EAAKA,qBAAqBN,KAA1B,gBAC5B,EAAKO,iBAAmB,EAAKA,iBAAiBP,KAAtB,gBACxB,EAAKQ,6BAA+B,EAAKA,6BAA6BR,KAAlC,gBACpC,EAAKS,cAAgB,EAAKA,cAAcT,KAAnB,gBA7BX,E,yDAgCCU,GAAQ,IAAD,EACMA,EAAMlC,OAAtBG,EADU,EACVA,KAAML,EADI,EACJA,MAEdqC,KAAKC,SAAL,eACGjC,EAAOL,M,iCAMDoC,GAAQ,IACT/B,EAAS+B,EAAMlC,OAAfG,KAERgC,KAAKF,cAAc9B,K,mCAIR+B,GAAQ,IAAD,OAClBA,EAAMG,iBACN,IAQIC,GAAU,EAKd,GAbiB,CACf,YACA,WACA,QACA,eACA,WACA,wBAGSC,SAAQ,SAAAC,GACjBF,EAAU,EAAKL,cAAcO,IAAUF,KAGrCA,EAAQ,CAEV,IAAIG,EAAM,CACV/B,UAAYyB,KAAKpD,MAAM2B,UACvBC,SAAWwB,KAAKpD,MAAM4B,SACtBnC,MAAQ2D,KAAKpD,MAAMP,MACnBoC,aAAeuB,KAAKpD,MAAM6B,aAC1BlC,SAAWyD,KAAKpD,MAAML,UAExBU,IAAMC,KAAK,+BAAgCoD,GAAKnD,KAAK6C,KAAKC,SAAS,CAAEhB,iBAAiB,IACtFe,KAAKC,SAAS,CACZ1B,UAAW,GACXC,SAAU,GACVC,aAAc,GACdpC,MAAO,GACPE,SAAU,GACVmC,qBAAsB,GACtBC,eAAgB,GAChBC,aAAc,GACdC,kBAAmB,GACnBC,WAAY,GACZC,cAAe,GACfC,0BAA2B,GAE3BE,UAAW,GACXC,iBAAkB,WAMfa,KAAKC,SAAS,CAAEhB,iBAAiB,IAItC,OAAOe,KAAKpD,MAAMqC,kB,oCAONjB,GACZ,IAAImC,GAAU,EASd,MAPa,cAATnC,EAAsBmC,EAAUH,KAAKR,oBACvB,aAATxB,EAAqBmC,EAAUH,KAAKP,mBAC3B,iBAATzB,EAAyBmC,EAAUH,KAAKL,uBAC/B,aAAT3B,EAAqBmC,EAAUH,KAAKJ,mBAC3B,UAAT5B,EAAkBmC,EAAUH,KAAKN,gBACxB,yBAAT1B,IACPmC,EAAUH,KAAKH,gCACVM,I,0CAIP,IAAIxB,EAAiB,GAUrB,MAPqB,KADPqB,KAAKpD,MAAM2B,UACfgC,SAAe5B,EAAiB,4BAG1CqB,KAAKC,SAAS,CACVtB,oBAGmB6B,I,sCAIR,IAAD,OACV1B,EAAa,GACbI,EAAY,GACZuB,EAAY,CACdpE,MAAO2D,KAAKpD,MAAMP,OA4BpB,MAzBqB,KADP2D,KAAKpD,MAAMP,MACfkE,OAAezB,EAAa,uBAEpC7B,IAAMC,KAAK,uCAAwCuD,GAAWtD,MAAK,SAAAuD,GAejE,MAdqB,UAAlBA,EAASpD,MAEZwB,EAAa,0BACb6B,QAAQC,IAAI9B,KAIVI,EAAY,oBACZyB,QAAQC,IAAI1B,IAGd,EAAKe,SAAS,CACZnB,aAAYI,cAEmB,KAAdA,KAKvBc,KAAKC,SAAS,CACZnB,eAE+B,KAAdI,I,yCAKnB,IAAI2B,EAAgB,GAOpB,MALqB,KADPb,KAAKpD,MAAM4B,SACf+B,SAAeM,EAAgB,2BAEzCb,KAAKC,SAAS,CACZY,kBAEuB,KAAlBA,I,6CAGe,IAAD,OACjBhC,EAAoB,GACpBiC,EAAY,CACdrC,aAAcuB,KAAKpD,MAAM6B,cAEvBU,EAAmB,GACjBxB,EAAQqC,KAAKpD,MAAM6B,aA4BzB,MA3BmB,KAAfd,EAAM4C,KAAa1B,EAAoB,wBACjCT,EAAe2C,KAAKpD,GAG1BV,IAAMC,KAAK,uCAAwC4D,GAAW3D,MAAK,SAAAuD,GAejE,MAdqB,UAAlBA,EAASpD,KAEZuB,EAAoB,8DAKpBM,EAAmB,2BAInB,EAAKc,SAAS,CACZpB,oBAAmBM,qBAE0B,KAArBA,KAjB9BN,EAAoB,6BAsBtBmB,KAAKC,SAAS,CACZpB,oBAAmBM,qBAE0B,KAArBA,I,yCAI1B,IAAIJ,EAAgB,GACdpB,EAAQqC,KAAKpD,MAAML,SASzB,MARmB,KAAfoB,EAAM4C,KAAaxB,EAAgB,2BAC7BV,EAAkB0C,KAAKpD,KAC/BoB,EACE,2IAEJiB,KAAKC,SAAS,CACZlB,kBAEuB,KAAlBA,I,qDAIP,IAAIC,EAA4B,GAOhC,OANIgB,KAAKpD,MAAML,WAAayD,KAAKpD,MAAM8B,uBACrCM,EAA4B,0CAE9BgB,KAAKC,SAAS,CACZjB,8BAEmC,KAA9BA,I,+BAOD,IAAD,EAGL,OACI,qBAAK5D,UAAU,qBAAf,SACI,qBAAKA,UAAU,kDAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,uDAEA,sBAAKA,UAAU,0BAAf,UACI,uBAAM0B,UAAQ,EAACC,aAAa,MAAMC,SAAUgD,KAAKT,aAAjD,UACI,cAAC9B,EAAA,EAAD,CACIC,GAAG,iBACHI,MAAM,eACNC,KAAK,OAELC,KAAK,YACLtC,MAAM,YACNkC,SAAUoC,KAAKZ,aACfzB,MAAOqC,KAAKpD,MAAM2B,UAClByC,OAAQhB,KAAKV,WACb7D,QAAQ,aAGR,uBACA,uBACHuE,KAAKpD,MAAM+B,gBAAmB,qBAAKvD,UAAU,WAAf,SAA2B4E,KAAKpD,MAAM+B,iBACpEqB,KAAKpD,MAAM4D,gBAAmB,qBAAKpF,UAAU,WAAf,SAA2B4E,KAAKpD,MAAM4D,iBACrE,cAAC/C,EAAA,GAAD,GAAWC,GAAG,iBAAiBI,MAAM,cAAcC,KAAK,OAAOC,KAAK,SAApE,qBAAiF,YAAjF,sBACWgC,KAAKpD,MAAM4B,UADtB,yBAEcwB,KAAKZ,cAFnB,uBAGYY,KAAKV,YAHjB,wBAIY,YAJZ,IAMI,uBACA,uBACHU,KAAKpD,MAAMiE,eAAkB,qBAAKzF,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMiE,gBAEpE,cAACpD,EAAA,EAAD,CAAWC,GAAG,iBACZI,MAAM,WACNC,KAAK,OACLC,KAAK,QACLL,MAAOqC,KAAKpD,MAAMP,MAClBuB,SAAUoC,KAAKZ,aACf4B,OAAQhB,KAAKV,WACb7D,QAAQ,aACR,uBACA,uBAEDuE,KAAKpD,MAAMkC,YAAe,qBAAK1D,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMkC,aAChEkB,KAAKpD,MAAMsC,WAAc,qBAAK9D,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMsC,YAChE,cAACzB,EAAA,EAAD,CACIC,GAAG,iBACHI,MAAM,YACNC,KAAK,QACLC,KAAK,eACLL,MAAOqC,KAAKpD,MAAM6B,aAClBb,SAAUoC,KAAKZ,aACf4B,OAAQhB,KAAKV,WACb7D,QAAQ,aAER,uBACA,uBACCuE,KAAKpD,MAAMiC,mBAAsB,qBAAKzD,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMiC,oBACvEmB,KAAKpD,MAAMuC,kBAAqB,qBAAK/D,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMuC,mBAC3E,cAAC1B,EAAA,EAAD,CACIC,GAAG,iBACHI,MAAM,gBACNC,KAAK,WACLJ,MAAOqC,KAAKpD,MAAML,SAClBqB,SAAUoC,KAAKZ,aACf4B,OAAQhB,KAAKV,WACbvC,aAAa,MACbiB,KAAK,WACLvC,QAAQ,aAEZ,uBACA,uBACCuE,KAAKpD,MAAMmC,eAAkB,qBAAK3D,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMmC,gBACpE,cAACtB,EAAA,EAAD,CACIC,GAAG,iBACHI,MAAM,+BACNC,KAAK,WACLC,KAAK,uBACLL,MAAOqC,KAAKpD,MAAM8B,qBAClBd,SAAUoC,KAAKZ,aACf4B,OAAQhB,KAAKV,WACbvC,aAAa,MACbtB,QAAQ,aAEZ,uBACA,uBACCuE,KAAKpD,MAAMoC,2BAA8B,qBAAK5D,UAAU,WAAf,SAA2B4E,KAAKpD,MAAMoC,4BAWhF,cAAC1D,EAAA,EAAD,CAAQF,UAAU,gBAAiBG,MAAO,CAACC,SAAU,QAASC,QAAQ,YAAYsC,KAAK,SAASrC,MAAM,YAAtG,yBAAsI,uBAAS,0BAInJ,qDAAkB,cAAC,IAAD,CAAML,GAAG,YAAYE,MAAO,CAACG,MAAO,OAAQuC,OAAQ,UAAWC,WAAY,OAAQC,eAAgB,QAAnG,4BAAlB,mCACC6B,KAAKpD,MAAMqC,gBACX,mBAAG1D,MAAO,CAACG,MAAO,SAAlB,qEACK,iB,GAtWXuF,a,OCINC,MAfjB,SAAgB/F,GAAQ,IACZsB,EAAkBZ,IAAlBY,cAMR,OACE,sBAAKrB,UAAU,QAAf,UACE,uCACA,wBAAQ+F,QAPZ,WACE1E,KAME,yB,gBCSO2E,MAnBf,YAA0D,IAAvBH,EAAsB,EAAjCI,UAAyBC,EAAQ,6BAC/CC,EAAe1F,IAAf0F,WAER,OACE,cAAC,IAAD,2BACID,GADJ,IAEAE,OAAQ,SAAArG,GAAK,OACXoG,EACE,cAACN,EAAD,eAAe9F,IAEf,cAAC,IAAD,CACEE,GAAI,CAAEoG,SAAU,WAAY7E,MAAO,CAAEC,QAAS1B,EAAMwB,kBCe/C+E,MAnBf,SAAcvG,GAAQ,IAAD,EACmBa,qBADnB,mBACVuF,EADU,KACE9E,EADF,KAOrB,OAEI,cAACd,EAAYgG,SAAb,CAAsBhE,MAAO,CAAE4D,aAAY9E,cANzB,SAACa,GACjBsE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUzE,IAC9Cb,EAAca,KAIhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,IAAIZ,UAAWa,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYZ,UAAWtF,IACzC,cAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,YAAYZ,UAAW/C,IACzC,cAAC,EAAD,CAAc2D,KAAK,UAAUZ,UAAWH,U,OCGrCiB,MApBf,WACE,OAGI,qBAAK/G,UAAU,mBAAf,SACA,eAAC,SAAD,CAAQgH,aAAW,EAAChH,UAAU,aAA9B,UACI,cAAC,SAAD,CAAQiH,aAAW,EAACC,MAAO,cAAC,IAAD,CAAMlH,UAAU,OAAOC,GAAG,IAA1B,0BAI3B,eAAC,UAAD,CAASD,UAAU,UAAnB,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,SAAf,SAAwB,gCAAK,mBAAGmH,MAAM,qBAAd,yBCRrBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACC,cAAC,IAAD,UACG,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.80603c0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./landpage.css\";\r\nimport \"./mainpage.css\";\r\nimport { Link } from 'react-router-dom'\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nfunction Home(props) {\r\n  \r\n  return (\r\n    <div className=\"main-container\">    \r\n        <div className=\"main-info animate__animated animate__fadeInRight\">\r\n            <div className=\"main-info-center\">\r\n                <h3 className=\"info-title\">Witaj drogi użytkowniku!</h3>\r\n                <div className=\"info-content\">\r\n                    <p>Calcounter jest aplikacja stworzoną dla ludzi którzy chcą zrobić coś ze swoim życiem. Pozwala na łatwe obliczenie kalorii spożywanych w ciągu dnia. Z naszą pomocą zbudujesz sylwetkę swoich marzeń, schudniesz, lub nabierzesz masy mięśniowej, nie odbierając sobie przyjemności z jedzenia. W naszej aplikacji znajdują się również gotowe diety które są do Twojej dyspozycji. </p>\r\n                </div>\r\n                <Link className=\"button-link\" to=\"/landpage\">\r\n                    <Button className=\"button\" style={{fontSize: \"20px\"}} variant=\"contained\" color=\"secondary\">\r\n                    Zaczynajmy!\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React, { useState } from 'react';\r\nimport \"./landpage.css\";\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from \"./context/auth\";\r\n\r\n\r\n    \r\nfunction Landing(props) {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { setAuthTokens } = useAuth();\r\n    let referer;\r\n    if(props.location.state !== undefined) {\r\n        referer = props.location.state.referer;\r\n    } else {\r\n        referer = \"/\";\r\n    }\r\n    function postLogin() {\r\n        \r\n        \r\n      axios.post(\"http://localhost/api/login.php\", {\r\n        login,\r\n        password\r\n    }).then(result => {\r\n        if (result.status === 200) {\r\n          setAuthTokens(result.data);\r\n          setLoggedIn(true);\r\n        } else {\r\n          setIsError(true);\r\n        }\r\n      }).catch(e => {\r\n        setIsError(true);\r\n      });\r\n    }\r\n    \r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/secret\" />;\r\n    }\r\n  \r\n    return (\r\n     \r\n    \r\n    \r\n    \r\n    <div className=\"land-container\">    \r\n                <div className=\"sign-in-container animate__animated animate__fadeInRight\">\r\n                    <div className=\"center-container\">\r\n                        <h3>Zaloguj się!</h3>\r\n                        <div className=\"form-container\">\r\n                            <form Validate autoComplete=\"off\" onSubmit={postLogin}>\r\n                                \r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    value={login}\r\n                                    onChange={e => {\r\n                                      setLogin(e.target.value);\r\n                                    }}\r\n                                    label=\"Login...\" type=\"text\" name=\"login\" \r\n                                    variant=\"outlined\" \r\n                                />\r\n                                  <br></br><br></br>\r\n                                <TextField \r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Password...\"\r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    onChange={e => {\r\n                                        setPassword(e.target.value);\r\n                                      }}\r\n                                    variant=\"outlined\" \r\n                                />\r\n                                    <br></br><br></br>\r\n                                <Button className=\"submit-button\" style={{fontSize: \"15px\"}}  variant=\"contained\" type=\"submit\" color=\"secondary\">Zaloguj</Button><br></br><br></br>\r\n                                \r\n                            </form>\r\n                            <p>Nie masz konta?<Link to=\"/register\" style={{color: \"rose\", cursor: \"pointer\", fontWeight: \"bold\", textDecoration: \"none\"}}> Kliknij tutaj</Link> aby je szybko założyć.</p>\r\n                            { isError && <p>The username or password provided were incorrect!</p> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n    \r\n    );\r\n  }\r\n  \r\n  export default Landing;","import React, { Component } from 'react';\r\nimport \"./register.css\";\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst passwordValidator = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/;\r\n\r\nclass register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          emailAddress: \"\",\r\n          login: \"\",\r\n          password: \"\",\r\n          passwordConfirmation: \"\",\r\n          firstNameError: \"\",\r\n          lastNamerror: \"\",\r\n          emailAddressError: \"\",\r\n          loginError: \"\",\r\n          passwordError: \"\",\r\n          passwordConfirmationError: \"\",\r\n          isFormSubmitted: false,\r\n          loginFree: \"\",\r\n          emailAddressFree: \"\"\r\n          \r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateFirstName = this.validateFirstName.bind(this);\r\n        this.validateLastName = this.validateLastName.bind(this);\r\n        this.validateLogin = this.validateLogin.bind(this);\r\n        this.validateEmailAddress = this.validateEmailAddress.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n        this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(this);\r\n        this.validateField = this.validateField.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const { name, value } = event.target;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    \r\n        return;\r\n      }\r\n    \r\n      handleBlur(event) {\r\n        const { name } = event.target;\r\n    \r\n        this.validateField(name);\r\n        return;\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        let formFileds = [\r\n          \"firstName\",\r\n          \"lastName\",\r\n          \"login\",\r\n          \"emailAddress\",\r\n          \"password\",\r\n          \"passwordConfirmation\"\r\n        ];\r\n        let isValid = true;\r\n        formFileds.forEach(field => {\r\n          isValid = this.validateField(field) && isValid;\r\n        });\r\n    \r\n        if (isValid){ \r\n          \r\n          let dat = {\r\n          firstName : this.state.firstName,\r\n          lastName : this.state.lastName,\r\n          login : this.state.login,\r\n          emailAddress : this.state.emailAddress,\r\n          password : this.state.password\r\n      };\r\n        axios.post(\"http://localhost/api/api.php\", dat).then(this.setState({ isFormSubmitted: true }),\r\n        this.setState({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          emailAddress: \"\",\r\n          login: \"\",\r\n          password: \"\",\r\n          passwordConfirmation: \"\",\r\n          firstNameError: \"\",\r\n          lastNamerror: \"\",\r\n          emailAddressError: \"\",\r\n          loginError: \"\",\r\n          passwordError: \"\",\r\n          passwordConfirmationError: \"\",\r\n          \r\n          loginFree: \"\",\r\n          emailAddressFree: \"\"\r\n\r\n        })\r\n        );\r\n        \r\n    } \r\n        else this.setState({ isFormSubmitted: false });\r\n    \r\n       \r\n        \r\n        return this.state.isFormSubmitted;\r\n        \r\n        \r\n       \r\n        \r\n      }\r\n    \r\n      validateField(name) {\r\n        let isValid = false;\r\n    \r\n        if (name === \"firstName\") isValid = this.validateFirstName();\r\n        else if (name === \"lastName\") isValid = this.validateLastName();\r\n        else if (name === \"emailAddress\") isValid = this.validateEmailAddress();\r\n        else if (name === \"password\") isValid = this.validatePassword();\r\n        else if (name === \"login\") isValid = this.validateLogin();\r\n        else if (name === \"passwordConfirmation\")\r\n          isValid = this.validatePasswordConfirmation();\r\n        return isValid;\r\n      }\r\n    \r\n      validateFirstName() {\r\n        let firstNameError = \"\";\r\n        let firstNameRight = \"\";\r\n        const value = this.state.firstName;\r\n        if (value.trim() === \"\") firstNameError = \"Imię jest wymagane!\";\r\n        \r\n    \r\n        this.setState({\r\n            firstNameError\r\n           \r\n        });\r\n        return firstNameError, firstNameRight === \"\";\r\n     \r\n      }\r\n\r\n      validateLogin() {\r\n        let loginError = \"\";\r\n        let loginFree = \"\";\r\n        let login_obj = {\r\n          login: this.state.login\r\n        }\r\n        const value = this.state.login;\r\n        if (value.trim() === \"\") loginError = \"Login jest wymagany!\";\r\n        else(\r\n          axios.post(\"http://localhost/api/login_check.php\", login_obj).then(response => {\r\n            if(response.data === \"taken\")\r\n            {\r\n            loginError = \"Login jest zajęty!\";\r\n            console.log(loginError);\r\n            }\r\n            else\r\n            {\r\n              loginFree = \"Login jest wolny!\";\r\n              console.log(loginFree);\r\n             \r\n            }\r\n            this.setState({\r\n              loginError, loginFree\r\n            });\r\n            return loginError, loginFree === \"\";\r\n            \r\n          }\r\n          )\r\n        )\r\n        this.setState({\r\n          loginError\r\n        });\r\n        return loginError, loginFree === \"\";\r\n        \r\n      }\r\n    \r\n      validateLastName() {\r\n        let lastNameError = \"\";\r\n        const value = this.state.lastName;\r\n        if (value.trim() === \"\") lastNameError = \"Nazwisko jest wymagane!\";\r\n    \r\n        this.setState({\r\n          lastNameError\r\n        });\r\n        return lastNameError === \"\";\r\n      }\r\n    \r\n      validateEmailAddress() {\r\n        let emailAddressError = \"\";\r\n        let email_obj = {\r\n          emailAddress: this.state.emailAddress\r\n        }\r\n        let emailAddressFree = \"\";\r\n        const value = this.state.emailAddress;\r\n        if (value.trim === \"\") emailAddressError = \"E-mail jest wymagany!\";\r\n        else if (!emailValidator.test(value))\r\n          emailAddressError = \"Nie poprawny adres e-mail!\";\r\n          else(\r\n            axios.post(\"http://localhost/api/email_check.php\", email_obj).then(response => {\r\n              if(response.data === \"taken\")\r\n              {\r\n              emailAddressError = \"Na ten adres e-mail jest już założone konto!\";\r\n              \r\n              }\r\n              else\r\n              {\r\n              emailAddressFree = \"Adres e-mail jest wolny!\";\r\n               \r\n               \r\n              }\r\n              this.setState({\r\n                emailAddressError, emailAddressFree\r\n              });\r\n              return emailAddressError, emailAddressFree === \"\";\r\n              \r\n            }\r\n            )\r\n          )\r\n        this.setState({\r\n          emailAddressError, emailAddressFree\r\n        });\r\n        return emailAddressError, emailAddressFree === \"\";\r\n      }\r\n    \r\n      validatePassword() {\r\n        let passwordError = \"\";\r\n        const value = this.state.password;\r\n        if (value.trim === \"\") passwordError = \"Hasło jest wymagane\";\r\n        else if (!passwordValidator.test(value))\r\n          passwordError =\r\n            \"Hasło musi zawierać co najmniej 8 znaków, 1 liczbę, 1 wielką i 1 małą literę oraz znak specjalny!\";\r\n    \r\n        this.setState({\r\n          passwordError\r\n        });\r\n        return passwordError === \"\";\r\n      }\r\n    \r\n      validatePasswordConfirmation() {\r\n        let passwordConfirmationError = \"\";\r\n        if (this.state.password !== this.state.passwordConfirmation)\r\n          passwordConfirmationError = \"Hasła nie zgadzają się!\";\r\n    \r\n        this.setState({\r\n          passwordConfirmationError\r\n        });\r\n        return passwordConfirmationError === \"\";\r\n      }\r\n\r\n    \r\n\r\n     \r\n    \r\n    render() {\r\n    \r\n   \r\n        return (\r\n            <div className=\"register-container\">    \r\n                <div className=\"register animate__animated animate__fadeInRight\">\r\n                    <div className=\"register-center-container\">\r\n                        <h3>Zarejestruj się!</h3>\r\n                     \r\n                        <div className=\"register-form-container\">\r\n                            <form Validate autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                                <TextField \r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Imię...\"\r\n                                    type=\"text\"\r\n                                    \r\n                                    name=\"firstName\" \r\n                                    color=\"secondary\"\r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.firstName} \r\n                                    onBlur={this.handleBlur} \r\n                                    variant=\"outlined\" \r\n                                   \r\n                                    />\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                {this.state.firstNameError && (<div className=\"errorMsg\">{this.state.firstNameError}</div>)}\r\n                                {this.state.firstNameRight && (<div className=\"RightMsg\">{this.state.firstNameRight}</div>)}\r\n                                <TextField id=\"outlined-basic\" label=\"Nazwisko...\" type=\"text\" name=\"login\" name=\"lastName\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.handleBlur} \r\n                                    variant=\"outlined\" \r\n                                    />\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                {this.state.lastNameError && (<div className=\"errorMsg\">{this.state.lastNameError}</div>)}\r\n                               \r\n                                <TextField id=\"outlined-basic\"\r\n                                  label=\"Login...\"\r\n                                  type=\"text\" \r\n                                  name=\"login\" \r\n                                  value={this.state.login}\r\n                                  onChange={this.handleChange}\r\n                                  onBlur={this.handleBlur}   \r\n                                  variant=\"outlined\" />\r\n                                  <br></br>\r\n                                  <br></br>\r\n                                  \r\n                                {this.state.loginError && (<div className=\"errorMsg\">{this.state.loginError}</div>)}\r\n                                {this.state.loginFree && (<div className=\"RightMsg\">{this.state.loginFree}</div>)}\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"E-mail...\"\r\n                                    type=\"email\" \r\n                                    name=\"emailAddress\" \r\n                                    value={this.state.emailAddress}\r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.handleBlur} \r\n                                    variant=\"outlined\" \r\n                                    />\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    {this.state.emailAddressError && (<div className=\"errorMsg\">{this.state.emailAddressError}</div>)}\r\n                                    {this.state.emailAddressFree && (<div className=\"RightMsg\">{this.state.emailAddressFree}</div>)}\r\n                                <TextField \r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Hasło...\" \r\n                                    type=\"password\" \r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.handleBlur}\r\n                                    autoComplete=\"off\"\r\n                                    name=\"password\" \r\n                                    variant=\"outlined\" \r\n                                />\r\n                                <br></br>\r\n                                <br></br>\r\n                                {this.state.passwordError && (<div className=\"errorMsg\">{this.state.passwordError}</div>)}\r\n                                <TextField \r\n                                    id=\"outlined-basic\" \r\n                                    label=\"Potwierdź hasło...\" \r\n                                    type=\"password\" \r\n                                    name=\"passwordConfirmation\"\r\n                                    value={this.state.passwordConfirmation}\r\n                                    onChange={this.handleChange}\r\n                                    onBlur={this.handleBlur}\r\n                                    autoComplete=\"off\" \r\n                                    variant=\"outlined\" \r\n                                />\r\n                                <br></br>\r\n                                <br></br>\r\n                                {this.state.passwordConfirmationError && (<div className=\"errorMsg\">{this.state.passwordConfirmationError}</div>)}\r\n                                {/* <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"Data urodzenia\"\r\n                                    type=\"date\"\r\n                                    defaultValue=\"dd-mm-yyyy\"\r\n                                    variant=\"outlined\"\r\n                                    InputLabelProps={{\r\n                                    shrink: true,\r\n                                    }}\r\n                                /><br></br><br></br> */}\r\n                                <Button className=\"submit-button\"  style={{fontSize: \"15px\"}} variant=\"contained\" type=\"submit\" color=\"secondary\">Zarejestruj</Button><br></br><br></br>\r\n                                \r\n                            </form>\r\n                           \r\n                            <p>Masz już konto?<Link to=\"/landpage\" style={{color: \"rose\", cursor: \"pointer\", fontWeight: \"bold\", textDecoration: \"none\"}}> Kliknij tutaj</Link> aby się zalogować.</p>\r\n                            {this.state.isFormSubmitted ? (\r\n                             <p style={{color: \"green\"}}>Udało się, zostałeś zarejestrowany!</p>\r\n                            ) : ( \"\" )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n               \r\n        )\r\n    }\r\n}\r\nexport default register;\r\n","import \"./secretstyle.css\";\r\nimport React from \"react\";\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nfunction Secret(props) {\r\n    const { setAuthTokens } = useAuth();\r\n  \r\n    function logOut() {\r\n      setAuthTokens();\r\n    }\r\n  \r\n    return (\r\n      <div className=\"redsc\">\r\n        <p>Secret</p>\r\n        <button onClick={logOut}>Log out</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Secret;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const { authTokens } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n    {...rest}\r\n    render={props =>\r\n      authTokens ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: \"/landing\", state: { referer: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useState } from 'react';\r\nimport mainpage from './mainpage';\r\nimport Landing from './landpage';\r\nimport register from './register';\r\nimport Secret from './secret';\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { AuthContext } from \"./context/auth\";\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n  \r\nfunction Main(props) {\r\n    const [authTokens, setAuthTokens] = useState();\r\n    \r\n    const setTokens = (data) => {\r\n      localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n      setAuthTokens(data);\r\n}\r\nreturn (\r\n    \r\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={mainpage} />\r\n            <Route exact path=\"/landpage\" component={Landing} />\r\n            <Route exact path=\"/register\" component={register} />\r\n            <PrivateRoute path=\"/secret\" component={Secret} />\r\n        </Switch>\r\n    </AuthContext.Provider>\r\n);\r\n}\r\nexport default Main;","import React from 'react';\nimport { Layout, Header, Content } from 'react-mdl';\nimport 'react-mdl/extra/material.css';   \nimport 'react-mdl/extra/material.js';\nimport Main from './components/main';\nimport './App.css';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n  \n\n      <div className=\"demo-big-content\">\n      <Layout fixedHeader className=\"background\">\n          <Header transparent title={<Link className=\"logo\" to=\"/\">Calcounter</Link>}>\n            \n          </Header>\n         \n          <Content className=\"content\">\n            <Main />\n            <div className=\"footer\"><div><i class=\"far fa-copyright\"></i>JPcollab</div></div>\n          </Content>\n          \n      </Layout>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}